{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/silvana/Dropbox/GitHub/COURSEIT/mercadolibre_next/ml_next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { startClock, serverRenderClock } from '../store';\nimport Examples from '../components/examples';\nimport FileProduct from './fileProduct';\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).apply(this, arguments));\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var dispatch = this.props.dispatch;\n      this.timer = startClock(dispatch);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, __jsx(Examples, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), __jsx(FileProduct, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var reduxStore = _ref.reduxStore,\n          req = _ref.req;\n      var isServer = !!req;\n      reduxStore.dispatch(serverRenderClock(isServer));\n      return {};\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default connect()(Index);","map":{"version":3,"sources":["/Users/silvana/Dropbox/GitHub/COURSEIT/mercadolibre_next/ml_next/pages/index.js"],"names":["React","connect","startClock","serverRenderClock","Examples","FileProduct","Index","dispatch","props","timer","clearInterval","reduxStore","req","isServer","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,UAA9C;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;IAEMC,K;;;;;;;;;;;;;wCAQgB;AAAA,UACVC,QADU,GACG,KAAKC,KADR,CACVD,QADU;AAElB,WAAKE,KAAL,GAAaP,UAAU,CAACK,QAAD,CAAvB;AACD;;;2CAEsB;AACrBG,MAAAA,aAAa,CAAC,KAAKD,KAAN,CAAb;AACD;;;6BAEQ;AACP,aACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;0CAvB2C;AAAA,UAAnBE,UAAmB,QAAnBA,UAAmB;AAAA,UAAPC,GAAO,QAAPA,GAAO;AAC1C,UAAMC,QAAQ,GAAG,CAAC,CAACD,GAAnB;AACAD,MAAAA,UAAU,CAACJ,QAAX,CAAoBJ,iBAAiB,CAACU,QAAD,CAArC;AAEA,aAAO,EAAP;AACD;;;;EANiBb,KAAK,CAACc,S;;AA2B1B,eAAeb,OAAO,GAAGK,KAAH,CAAtB","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { startClock, serverRenderClock } from '../store'\nimport Examples from '../components/examples'\nimport FileProduct from './fileProduct';\n\nclass Index extends React.Component {\n  static getInitialProps({ reduxStore, req }) {\n    const isServer = !!req\n    reduxStore.dispatch(serverRenderClock(isServer))\n\n    return {}\n  }\n\n  componentDidMount() {\n    const { dispatch } = this.props\n    this.timer = startClock(dispatch)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer)\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Examples />\n        <FileProduct />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default connect()(Index)\n"]},"metadata":{},"sourceType":"module"}